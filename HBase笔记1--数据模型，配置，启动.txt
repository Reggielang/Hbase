一、HBase是一种分布式、可扩展、支持海量数据存储的NoSQL数据库。（一般用于实时处理）

二、HBase数据模型
逻辑上，HBase的数据模型同关系型数据库很类似，数据存储在一张表中，有行有列。但从HBase的底层物理存储结构（K-V）来看，HBase更像是一个multi-dimensional map。
每一行都有row key(按照字典序进行排序的)

实际上在每一次查询时，显示的数据都是最新时间戳的数据，所以看起来像时更改了原来的数据，实际上没有，HBase会在合适的时机把旧时间戳的数据删除。

三、数据模型
一个表中多个Region,Region 表中一个范围的数据，一个Region有多个store(根据Region的列族进行分割)，底层的文件是storefile，

1）Name Space
命名空间，类似于关系型数据库的database概念，每个命名空间下有多个表。HBase有两个自带的命名空间，分别是hbase和default，hbase中存放的是HBase内置的表，default表是用户默认使用的命名空间。
2）Table
类似于关系型数据库的表概念。不同的是，HBase定义表时只需要声明列族即可，不需要声明具体的列。这意味着，往HBase写入数据时，字段可以动态、按需指定。因此，和关系型数据库相比，HBase能够轻松应对字段变更的场景。
3）Row！！！
HBase表中的每行数据都由一个RowKey和多个Column（列）组成，数据是按照RowKey的字典顺序存储的，并且查询数据时只能根据RowKey进行检索，所以RowKey的设计十分重要。
4）Column
HBase中的每个列都由Column Family(列族)和Column Qualifier（列限定符）进行限定，例如info：name，info：age。建表时，只需指明列族，而列限定符无需预先定义。
5）Time Stamp
用于标识数据的不同版本（version），每条数据写入时，系统会自动为其加上该字段，其值为写入HBase的时间。
6）Cell
由{rowkey, column Family：column Qualifier, time Stamp} 唯一确定的单元。cell中的数据全部是字节码形式存贮。

四、基本架构
架构角色：
1）Region Server
Region Server为 Region的管理者，其实现类为HRegionServer，主要作用如下:
对于数据的操作：get, put, delete；添加，修改，删除
对于Region的操作：splitRegion（切分）、compactRegion

2）Master
Master是所有Region Server的管理者，其实现类为HMaster，主要作用如下：
对于表的操作：create, delete, alter
对于RegionServer的操作：分配regions到每个RegionServer，监控每个RegionServer的状态，负载均衡和故障转移。

3）Zookeeper
HBase通过Zookeeper来做master的高可用、RegionServer的监控、元数据的入口以及集群配置的维护等工作

4）HDFS
HDFS为Hbase提供最终的底层数据存储服务，同时为HBase提供高可用的支持。


五、HBase安装
Hadoop部署，zookeeper部署
HBase安装，配置环境变量，
分发环境变量
scp /etc/profile.d/my_env.sh root@hadoop104:/etc/profile.d/

1.hbase-env.sh修改内容：
export HBASE_MANAGES_ZK=false

2.hbase-site.xml修改内容：
<configuration>
    <property>
        <name>hbase.rootdir</name>
        <value>hdfs://hadoop102:8020/hbase</value>
    </property>

    <property>
        <name>hbase.cluster.distributed</name>
        <value>true</value>
    </property>

    <property>
        <name>hbase.zookeeper.quorum</name>
        <value>hadoop102,hadoop103,hadoop104</value>
    </property>
</configuration>

3.regionservers：
hadoop102
hadoop103
hadoop104

注意：Master启动是根据在哪台机器启动有关系

高可用(可选)
在HBase中HMaster负责监控HRegionServer的生命周期，均衡RegionServer的负载，如果HMaster挂掉了，那么整个HBase集群将陷入不健康的状态，并且此时的工作状态并不会维持太久。所以HBase支持对HMaster的高可用配置。

注意：hbase每个节点的时间不能差距过大，这样会造成数据存在歧义。
如果集群之间的节点时间不同步，会导致regionserver无法启动，抛出ClockOutOfSyncException异常。

1.在conf目录下创建backup-masters文件
2.在backup-masters文件中配置高可用HMaster节点
hadoop103
3.将新文件分发到其他节点

注意集群关闭启动顺序
启动顺序

Hadoop及hbase集群启动顺序 zookeepeer -> hadoop -> hbase

停止顺序

Hadoop及hbase集群关闭顺序 hbase -> hadoop -> zookeepeer